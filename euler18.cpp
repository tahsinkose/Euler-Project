
#include "euler18.hpp"

int main()
{
	BinaryNode* root = new BinaryNode(75,NULL,NULL);
	
	BinaryNode* node11 = new BinaryNode(95,NULL,NULL);
	BinaryNode* node12 = new BinaryNode(64,NULL,NULL);
	
	BinaryNode* node21 = new BinaryNode(17,NULL,NULL);
	BinaryNode* node22= new BinaryNode(47,NULL,NULL);
	BinaryNode* node23= new BinaryNode(82,NULL,NULL);
	
	BinaryNode* node31= new BinaryNode(18,NULL,NULL);
	BinaryNode* node32= new BinaryNode(35,NULL,NULL);
	BinaryNode* node33= new BinaryNode(87,NULL,NULL);
	BinaryNode* node34= new BinaryNode(10,NULL,NULL);

	BinaryNode* node41= new BinaryNode(20,NULL,NULL);
	BinaryNode* node42= new BinaryNode(4,NULL,NULL);
	BinaryNode* node43= new BinaryNode(82,NULL,NULL);
	BinaryNode* node44= new BinaryNode(47,NULL,NULL);
	BinaryNode* node45= new BinaryNode(65,NULL,NULL);
	
	BinaryNode* node51= new BinaryNode(19,NULL,NULL);
	BinaryNode* node52= new BinaryNode(1,NULL,NULL);
	BinaryNode* node53= new BinaryNode(23,NULL,NULL);
	BinaryNode* node54= new BinaryNode(75,NULL,NULL);
	BinaryNode* node55= new BinaryNode(3,NULL,NULL);
	BinaryNode* node56= new BinaryNode(34,NULL,NULL);
	
	BinaryNode* node61= new BinaryNode(88,NULL,NULL);
	BinaryNode* node62= new BinaryNode(2,NULL,NULL);
	BinaryNode* node63= new BinaryNode(77,NULL,NULL);
	BinaryNode* node64= new BinaryNode(73,NULL,NULL);
	BinaryNode* node65= new BinaryNode(7,NULL,NULL);
	BinaryNode* node66= new BinaryNode(63,NULL,NULL);
	BinaryNode* node67= new BinaryNode(67,NULL,NULL);
	
	BinaryNode* node71= new BinaryNode(99,NULL,NULL);
	BinaryNode* node72= new BinaryNode(65,NULL,NULL);
	BinaryNode* node73= new BinaryNode(4,NULL,NULL);
	BinaryNode* node74= new BinaryNode(28,NULL,NULL);
	BinaryNode* node75= new BinaryNode(6,NULL,NULL);
	BinaryNode* node76= new BinaryNode(16,NULL,NULL);
	BinaryNode* node77= new BinaryNode(70,NULL,NULL);
	BinaryNode* node78= new BinaryNode(92,NULL,NULL);
	
	BinaryNode* node81= new BinaryNode(41,NULL,NULL);
	BinaryNode* node82= new BinaryNode(41,NULL,NULL);
	BinaryNode* node83= new BinaryNode(26,NULL,NULL);
	BinaryNode* node84= new BinaryNode(56,NULL,NULL);
	BinaryNode* node85= new BinaryNode(83,NULL,NULL);
	BinaryNode* node86= new BinaryNode(40,NULL,NULL);
	BinaryNode* node87= new BinaryNode(80,NULL,NULL);
	BinaryNode* node88= new BinaryNode(70,NULL,NULL);
	BinaryNode* node89= new BinaryNode(33,NULL,NULL);
	
	BinaryNode* node91= new BinaryNode(41,NULL,NULL);
	BinaryNode* node92= new BinaryNode(48,NULL,NULL);
	BinaryNode* node93= new BinaryNode(72,NULL,NULL);
	BinaryNode* node94= new BinaryNode(33,NULL,NULL);
	BinaryNode* node95= new BinaryNode(47,NULL,NULL);
	BinaryNode* node96= new BinaryNode(32,NULL,NULL);
	BinaryNode* node97= new BinaryNode(37,NULL,NULL);
	BinaryNode* node98= new BinaryNode(16,NULL,NULL);
	BinaryNode* node99= new BinaryNode(94,NULL,NULL);
	BinaryNode* node910= new BinaryNode(29,NULL,NULL);
	
	BinaryNode* node101= new BinaryNode(53,NULL,NULL);
	BinaryNode* node102= new BinaryNode(71,NULL,NULL);
	BinaryNode* node103= new BinaryNode(44,NULL,NULL);
	BinaryNode* node104= new BinaryNode(65,NULL,NULL);
	BinaryNode* node105= new BinaryNode(25,NULL,NULL);
	BinaryNode* node106= new BinaryNode(43,NULL,NULL);
	BinaryNode* node107= new BinaryNode(91,NULL,NULL);
	BinaryNode* node108= new BinaryNode(52,NULL,NULL);
	BinaryNode* node109= new BinaryNode(97,NULL,NULL);
	BinaryNode* node1010= new BinaryNode(51,NULL,NULL);
	BinaryNode* node1011= new BinaryNode(14,NULL,NULL);
	
	BinaryNode* node111= new BinaryNode(70,NULL,NULL);
	BinaryNode* node112= new BinaryNode(11,NULL,NULL);
	BinaryNode* node113= new BinaryNode(33,NULL,NULL);
	BinaryNode* node114= new BinaryNode(28,NULL,NULL);
	BinaryNode* node115= new BinaryNode(77,NULL,NULL);
	BinaryNode* node116= new BinaryNode(73,NULL,NULL);
	BinaryNode* node117= new BinaryNode(17,NULL,NULL);
	BinaryNode* node118= new BinaryNode(78,NULL,NULL);
	BinaryNode* node119= new BinaryNode(39,NULL,NULL);
	BinaryNode* node1110= new BinaryNode(68,NULL,NULL);
	BinaryNode* node1111= new BinaryNode(17,NULL,NULL);
	BinaryNode* node1112= new BinaryNode(57,NULL,NULL);
	
	BinaryNode* node121= new BinaryNode(91,NULL,NULL);
	BinaryNode* node122= new BinaryNode(71,NULL,NULL);
	BinaryNode* node123= new BinaryNode(52,NULL,NULL);
	BinaryNode* node124= new BinaryNode(38,NULL,NULL);
	BinaryNode* node125= new BinaryNode(17,NULL,NULL);
	BinaryNode* node126= new BinaryNode(14,NULL,NULL);
	BinaryNode* node127= new BinaryNode(91,NULL,NULL);
	BinaryNode* node128= new BinaryNode(43,NULL,NULL);
	BinaryNode* node129= new BinaryNode(58,NULL,NULL);
	BinaryNode* node1210= new BinaryNode(50,NULL,NULL);
	BinaryNode* node1211= new BinaryNode(27,NULL,NULL);
	BinaryNode* node1212= new BinaryNode(29,NULL,NULL);
	BinaryNode* node1213= new BinaryNode(48,NULL,NULL);
	
	BinaryNode* node131= new BinaryNode(63,NULL,NULL);
	BinaryNode* node132= new BinaryNode(66,NULL,NULL);
	BinaryNode* node133= new BinaryNode(4,NULL,NULL);
	BinaryNode* node134= new BinaryNode(68,NULL,NULL);
	BinaryNode* node135= new BinaryNode(89,NULL,NULL);
	BinaryNode* node136= new BinaryNode(53,NULL,NULL);
	BinaryNode* node137= new BinaryNode(67,NULL,NULL);
	BinaryNode* node138= new BinaryNode(30,NULL,NULL);
	BinaryNode* node139= new BinaryNode(73,NULL,NULL);
	BinaryNode* node1310= new BinaryNode(16,NULL,NULL);
	BinaryNode* node1311= new BinaryNode(69,NULL,NULL);
	BinaryNode* node1312= new BinaryNode(87,NULL,NULL);
	BinaryNode* node1313= new BinaryNode(40,NULL,NULL);
	BinaryNode* node1314= new BinaryNode(31,NULL,NULL);
	
	BinaryNode* node141= new BinaryNode(4,NULL,NULL);
	BinaryNode* node142= new BinaryNode(62,NULL,NULL);
	BinaryNode* node143= new BinaryNode(98,NULL,NULL);
	BinaryNode* node144= new BinaryNode(27,NULL,NULL);
	BinaryNode* node145= new BinaryNode(23,NULL,NULL);
	BinaryNode* node146= new BinaryNode(9,NULL,NULL);
	BinaryNode* node147= new BinaryNode(70,NULL,NULL);
	BinaryNode* node148= new BinaryNode(98,NULL,NULL);
	BinaryNode* node149= new BinaryNode(73,NULL,NULL);
	BinaryNode* node1410= new BinaryNode(93,NULL,NULL);
	BinaryNode* node1411= new BinaryNode(38,NULL,NULL);
	BinaryNode* node1412= new BinaryNode(53,NULL,NULL);
	BinaryNode* node1413= new BinaryNode(60,NULL,NULL);
	BinaryNode* node1414= new BinaryNode(4,NULL,NULL);
	BinaryNode* node1415= new BinaryNode(23,NULL,NULL);
	
	root->left = node11;
	root->right = node12;
	
	node11->left = node21;
	node11->right = node22;
	node12->left = node22;
	node12->right = node23;
	
	node21->left=node31;
	node21->right=node32;
	node22->left=node32;
	node22->right=node33;
	node23->left=node33;
	node23->right=node34;

	node31->left=node41;
	node31->right=node42;
	node32->left=node42;
	node32->right=node43;
	node33->left=node43;
	node33->right=node44;
	node34->left=node44;
	node34->right=node45;

	node41->left=node51;
	node41->right=node52;
	node42->left=node52;
	node42->right=node53;
	node43->left=node53;
	node43->right=node54;
	node44->left=node54;
	node44->right=node55;
	node45->left=node55;
	node45->right=node56;

	node51->left = node61;
	node51->right = node62;
	node52->left = node62;
	node52->right = node63;
	node53->left = node63;	
	node53->right = node64;
	node54->left = node64;
	node54->right = node65;
	node55->left = node65;
	node55->right = node66;
	node56->left = node66;
	node56->right = node67;
	
	node61->left = node71;
	node61->right = node72;
	node62->left = node72;
	node62->right = node73;
	node63->left = node73;
	node63->right = node74;
	node64->left = node74;
	node64->right = node75;
	node65->left = node75;
	node65->right = node76;
	node66->left = node76;
	node66->right = node77;
	node67->left = node77;
	node67->right = node78;

	node71->left = node81;
	node71->right = node82;
	node72->left = node82;
	node72->right = node83;
	node73->left = node83;
	node73->right = node84;
	node74->left = node84;
	node74->right = node85;
	node75->left = node85;
	node75->right = node86;
	node76->left = node86;
	node76->right = node87;
	node77->left = node87;
	node77->right = node88;
	node78->left = node88;
	node78->right = node89;
	
	node81->left = node91;
	node81->right = node92;
	node82->left = node92;
	node82->right = node93;
	node83->left = node93;
	node83->right = node94;
	node84->left = node94;
	node84->right = node95;
	node85->left = node95;
	node85->right = node96;
	node86->left = node96;
	node86->right = node97;
	node87->left = node97;
	node87->right = node98;
	node88->left = node98;
	node88->right = node99;
	node89->left = node99;
	node89->right = node910;

	node91->left = node101;
	node91->right = node102;
	node92->left = node102;
	node92->right = node103;
	node93->left = node103;
	node93->right = node104;
	node94->left = node104;
	node94->right = node105;
	node95->left = node105;
	node95->right = node106;
	node96->left = node106;
	node96->right = node107;
	node97->left = node107;
	node97->right = node108;
	node98->left = node108;
	node98->right = node109;
	node99->left = node109;
	node99->right = node1010;
	node910->left = node1010;
	node910->right = node1011;
	
	node101->left = node111;
	node101->right = node112;
	node102->left = node112;
	node102->right = node113;
	node103->left = node113;
	node103->right = node114;
	node104->left = node114;
	node104->right = node115;
	node105->left = node115;
	node105->right = node116;
	node106->left = node116;
	node106->right = node117;
	node107->left = node117;
	node107->right = node118;
	node108->left = node118;
	node108->right = node119;
	node109->left = node119;
	node109->right = node1110;
	node1010->left = node1110;
	node1010->right = node1111;
	node1011->left = node1111;
	node1011->right = node1112;
	
	node111->left = node121;
	node111->right = node122;
	node112->left = node122;
	node112->right = node123;
	node113->left = node123;	
	node113->right = node124;
	node114->left = node124;
	node114->right = node125;
	node115->left = node125;
	node115->right = node126;
	node116->left = node126;
	node116->right = node127;
	node117->left = node127;
	node117->right = node128;
	node118->left = node128;
	node118->right = node129;
	node119->left = node129;
	node119->right = node1210;
	node1110->left = node1210;
	node1110->right = node1211;
	node1111->left = node1211;
	node1111->right = node1212;
	node1112->left = node1212;
	node1112->right = node1213;

	node121->left = node131;
	node121->right = node132;
	node122->left = node132;
	node122->right = node133;
	node123->left = node133;	
	node123->right = node134;
	node124->left = node134;
	node124->right = node135;
	node125->left = node135;
	node125->right = node136;
	node126->left = node136;
	node126->right = node137;
	node127->left = node137;
	node127->right = node138;
	node128->left = node138;
	node128->right = node139;
	node129->left = node139;
	node129->right = node1310;
	node1210->left = node1310;
	node1210->right = node1311;
	node1211->left = node1311;
	node1211->right = node1312;
	node1212->left = node1312;
	node1212->right = node1313;
	node1213->left = node1313;
	node1213->right = node1314;
	
	node131->left = node141;
	node131->right = node142;
	node132->left = node142;
	node132->right = node143;
	node133->left = node143;	
	node133->right = node144;
	node134->left = node144;
	node134->right = node145;
	node135->left = node145;
	node135->right = node146;
	node136->left = node146;
	node136->right = node147;
	node137->left = node147;
	node137->right = node148;
	node138->left = node148;
	node138->right = node149;
	node139->left = node149;
	node139->right = node1410;
	node1310->left = node1410;
	node1310->right = node1411;
	node1311->left = node1411;
	node1311->right = node1412;
	node1312->left = node1412;
	node1312->right = node1413;
	node1313->left = node1413;
	node1313->right = node1414;
	node1314->left = node1414;
	node1314->right = node1415;
	
	std::cout<<find_max_path_sum(root)<<endl;
	return 0;
}
